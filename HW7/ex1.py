"""
1)	Реализовать класс Matrix (матрица).
Обеспечить перегрузку конструктора класса (метод __init__()),
который должен принимать данные (список списков) для формирования матрицы.
Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.
Примеры матриц: 3 на 2, 3 на 3, 2 на 4.

31	22
37	43
51	86

3	5	32
2	4	6
-1	64	-8

3	5	8	3
8	3	7	1


Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в привычном виде.
Далее реализовать перегрузку метода __add__()
для реализации операции сложения двух объектов класса Matrix (двух матриц).
Результатом сложения должна быть новая матрица.
Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент первой строки первой матрицы
складываем с первым элементом первой строки второй матрицы и т.д.

"""


class Matrix:
    def __init__(self, matrix=[[1, 0, 0], [0, 1, 0], [0, 0, 1]]):
        self.matrix = matrix

    def __str__(self):
        str_1 = ''
        for el in self.matrix:
            str_2 = '\t'.join((str(e) for e in el)) + '\n'
            str_1 += str_2
        return str_1

    def __add__(self, other):
        if len(self.matrix) != len(other.matrix):
            return 'Ошибка'
        else:
            new_matrix = []
            for i in range(len(self.matrix)):
                if len(self.matrix[i]) != len(other.matrix[i]):
                    return 'Ошибка'
                else:
                    new_matrix.append([other.matrix[i][j] + self.matrix[i][j] for j in range(len(self.matrix[i]))])
        return Matrix(new_matrix)


m_1 = Matrix([[5, 3, -2],
              [4, 3, 2],
              [1, 3, 5]]);

m_2 = Matrix([[-3, -1, 2],
              [-2, -2, -2],
              [-1, -3, -4]]);

m_3 = Matrix([[-3, -1, 2],
              [-2, -2, -2]]);

m_4 = Matrix([[-3, -1, 2],
              [-2, -2, -2],
              [-1, -3]]);

m = m_1 + m_2
print(m)
print(m_1 + m_3)
print(m_1 + m_4)
